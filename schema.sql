--  RUN 1st
create extension vector;

-- RUN 2nd
create table hormozi (
  id bigint generated by default as identity primary key,
  tweet_id text,
  url text,
  text text,
  username text,
  tweet_timestamp text,
  retweets bigint,
  images text[],
  likes bigint,
  embedding vector (1536)
);

-- RUN 3rd after running the scripts
create or replace function hormozi_search (
  query_embedding vector(1536),
  similarity_threshold float,
  match_count int
)
returns table (
  id bigint,
  tweet_id text,
  url text,
  text text,
  username text,
  tweet_timestamp text,
  retweets bigint,
  images text[],
  likes bigint,
  similarity float
)
language plpgsql
as $$
begin
  return query
  select
    hormozi.id,
    hormozi.tweet_id,
    hormozi.url,
    hormozi.text,
    hormozi.username,
    hormozi.tweet_timestamp,
    hormozi.retweets,
    hormozi.images,
    hormozi.likes,
    1 - (hormozi.embedding <=> query_embedding) as similarity
  from hormozi
  where 1 - (hormozi.embedding <=> query_embedding) > similarity_threshold
  order by hormozi.embedding <=> query_embedding
  limit match_count;
end;
$$;

-- RUN 4th
create index on hormozi 
using ivfflat (embedding vector_cosine_ops)
with (lists = 100);
